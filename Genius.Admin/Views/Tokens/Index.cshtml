@model IEnumerable<Admin.Models.TokenViewModel>

@{
    ViewBag.Title = "Toekns";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Index";
}

@section styles {

    <!-- DataTables -->
    <link href="/assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="/assets/libs/datatables.net-buttons-bs4/css/buttons.bootstrap4.min.css" rel="stylesheet" type="text/css" />

    <!-- Responsive datatable examples -->
    <link href="/assets/libs/datatables.net-responsive-bs4/css/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">Tokens</h4>
                <p class="card-title-desc">
                    List registered tokens.
                </p>
            </div>
            <div class="card-body">
                <table id="datatable-buttons" class="table table-bordered dt-responsive nowrap w-100">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.currency)</th>
                            <th>@Html.DisplayNameFor(model => model.alias)</th>
                            <th>@Html.DisplayNameFor(model => model.network)</th>
                            <th>@Html.DisplayNameFor(model => model.decimals)</th>
                            <th>@Html.DisplayNameFor(model => model.networkDecimals)</th>
                            <th>@Html.DisplayNameFor(model => model.singleAddress)</th>
                            <th>@Html.DisplayNameFor(model => model.testNetwork)</th>
                            <th>@Html.DisplayNameFor(model => model.minDepositQuantity)</th>
                            <th>@Html.DisplayNameFor(model => model.minWithdrawalQuantity)</th>
                        </tr>
                    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.currency)</td>
            <td>@Html.DisplayFor(modelItem => item.alias)</td>
            <td>@Html.DisplayFor(modelItem => item.network)</td>
            <td>@Html.DisplayFor(modelItem => item.decimals)</td>
            <td>@Html.DisplayFor(modelItem => item.networkDecimals)</td>
            <td>@Html.DisplayFor(modelItem => item.singleAddress)</td>
            <td>@Html.DisplayFor(modelItem => item.testNetwork)</td>
            <td>@Html.DisplayFor(modelItem => item.minDepositQuantity)</td>
            <td>@Html.DisplayFor(modelItem => item.minWithdrawalQuantity)</td>
        </tr>
}
                    </tbody>
                </table>
            </div>
        </div>
        <!-- end cardaa -->
    </div> <!-- end col -->
</div> <!-- end row -->
@section scripts {


    <!-- Required datatable js -->
    <script src="/assets/libs/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="/assets/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>
    <!-- Buttons examples -->
    <script src="/assets/libs/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
    <script src="/assets/libs/datatables.net-buttons-bs4/js/buttons.bootstrap4.min.js"></script>
    <script src="/assets/libs/jszip/jszip.min.js"></script>
    <script src="/assets/libs/pdfmake/build/pdfmake.min.js"></script>
    <script src="/assets/libs/pdfmake/build/vfs_fonts.js"></script>
    <script src="/assets/libs/datatables.net-buttons/js/buttons.html5.min.js"></script>
    <script src="/assets/libs/datatables.net-buttons/js/buttons.print.min.js"></script>
    <script src="/assets/libs/datatables.net-buttons/js/buttons.colVis.min.js"></script>

    <!-- Responsive examples -->
    <script src="/assets/libs/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
    <script src="/assets/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"></script>

    <!-- Datatable init js -->
    <script src="/assets/js/pages/datatables.init.js"></script>

    <script src="/assets/js/app.js"></script>
}
